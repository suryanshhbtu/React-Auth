{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\React\\\\Current\\\\Section_22 Adding Authentication To React Apps\\\\01-starting-project\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nlet logoutTimer;\n\nconst calculateReaminingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingTime = adjExpirationTime - currentTime;\n  return remainingTime;\n};\n\nconst retreiveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n  const remainingTime = calculateReaminingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retreiveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = localStorage.getItem(\"token\");\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n\n    const remainingTime = calculateReaminingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n  }, []);\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"Lh1CfGbFk5nTLZoGW/pEiX6CFRc=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","AuthContext","createContext","token","isLoggedIn","login","logout","logoutTimer","calculateReaminingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingTime","retreiveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","loginHandler","setItem","clearTimeout","setTimeout","logoutHandler","console","log","contextValue","children"],"sources":["D:/Program Files/React/Current/Section_22 Adding Authentication To React Apps/01-starting-project/src/store/auth-context.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\nlet logoutTimer;\r\nconst calculateReaminingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n  const remainingTime = adjExpirationTime - currentTime;\r\n  return remainingTime;\r\n};\r\n\r\nconst retreiveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n\r\n  const remainingTime = calculateReaminingTime(storedExpirationDate);\r\n  if (remainingTime <= 3600) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  }\r\n  return { token: storedToken, duration: remainingTime };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retreiveStoredToken();\r\n  let initialToken;\r\n  if(tokenData){\r\n     initialToken = localStorage.getItem(\"token\");\r\n  }\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n    const remainingTime = calculateReaminingTime(expirationTime);\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n  },[]);\r\n\r\n  useEffect(()=>{\r\n    if(tokenData){\r\n      console.log(tokenData.duration);\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n  },[tokenData, logoutHandler]);\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}